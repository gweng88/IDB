version: '2.1'
services:
  traefik:
    image: traefik
    container_name: rldb-traefik
    restart: always
    depends_on:
      react:
        condition: service_healthy
    ports:
      - 8080:8080
      - 80:80
      - 443:443
    networks:
      - webgateway
    volumes:
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/servers.toml:/servers.toml
      #- ./traefik/acme.json:/acme.json:ro
  flask:
    container_name: rldb-flask
    build:
      context: backend/.
      dockerfile: Dockerfile
    command: sh /app/flask-launcher.sh
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app:z
    working_dir: /app
    ports:
      - 5000:5000
    networks:
      - webgateway
    healthcheck:
      test: curl -f http://localhost:5000
      interval: 3s
      timeout: 5s
      retries: 5
  react:
    container_name: rldb-react
    build:
      context: frontend/.
      dockerfile: Dockerfile
    volumes:
      - ./frontend/rldb:/app/rldb:z
    working_dir: /app/rldb
    ports:
      - 3000:3000
    networks:
      - webgateway
    depends_on:
      flask:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3000
      interval: 3s
      timeout: 5s
      retries: 5
  db:
    image: postgres:latest
    networks:
      - webgateway
    container_name: rldb-db
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 3s
      timeout: 5s
      retries: 5
networks:
  webgateway:
    driver: bridge